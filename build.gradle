plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower' version '1.7.2'
    id 'java'
    id 'maven-publish'
}

archivesBaseName = rootProject.archives_base_name
version = rootProject.mod_version + "+" + rootProject.minecraft_version
group = rootProject.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.

    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        url "https://maven.terraformersmc.com/releases/"
    }
    maven {
        url "https://maven.shedaniel.me"
    }
    maven {
        name = 'Ladysnake Mods'
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }
}

loom {
    accessWidenerPath = file("src/main/resources/flashfreeze.accesswidener")
}

sourceSets {
    testmod {
        runtimeClasspath += main.runtimeClasspath
        compileClasspath += main.compileClasspath
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
    mappings "net.fabricmc:yarn:${rootProject.yarn_mappings}:v2"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"

    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-api:${rootProject.cca_version}"

    modImplementation("com.terraformersmc:modmenu:3.0.1") {
        transitive = false
    }

    modCompileOnly("me.shedaniel.cloth:cloth-config-fabric:6.2.62") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modCompileOnly "maven.modrinth:lithium:${rootProject.lithium_version}"

    testmodImplementation sourceSets.main.output
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

processTestmodResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 17
}

java {
    withSourcesJar()
}
